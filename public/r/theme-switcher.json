{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-switcher",
  "type": "registry:component",
  "title": "Theme Switcher",
  "author": "pyyupsk <contact@fasu.dev>",
  "description": "A theme switcher component for light, dark, and system modes with Vercel Inc style.",
  "dependencies": ["lucide-react", "next-themes"],
  "registryDependencies": ["skeleton"],
  "files": [
    {
      "path": "src/registry/new-york/theme-switcher/theme-switcher.tsx",
      "content": "\"use client\";\n\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { cn } from \"@/lib/utils\";\nimport { MonitorIcon, MoonIcon, SunIcon } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useState } from \"react\";\n\nexport function ThemeSwitcher() {\n  const [mounted, setMounted] = useState(false);\n  const { setTheme, theme } = useTheme();\n\n  useEffect(() => setMounted(true), []);\n\n  if (!mounted) return <Skeleton className=\"h-8 w-24 rounded-full\" />;\n\n  return (\n    <div className=\"text-muted-foreground shadow-border inline-flex h-8 items-center rounded-full shadow-[0_0_0_1px]\">\n      {[\"system\", \"light\", \"dark\"].map((t) => (\n        <button\n          aria-label={`Use ${t} theme`}\n          className={cn(\n            \"inline-flex h-8 w-8 items-center justify-center rounded-full text-sm font-medium transition-colors\",\n            \"hover:text-foreground focus-visible:ring-ring focus-visible:ring-1 focus-visible:outline-none\",\n            theme === t && \"text-foreground shadow-border shadow-[0_0_0_1px]\",\n          )}\n          key={t}\n          onClick={() => setTheme(t)}\n        >\n          {t === \"system\" && <MonitorIcon className=\"size-4\" />}\n          {t === \"light\" && <SunIcon className=\"size-4\" />}\n          {t === \"dark\" && <MoonIcon className=\"size-4\" />}\n        </button>\n      ))}\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "docs": "Ensure next-themes is configured in your _app.tsx or layout.tsx.",
  "categories": ["dashboard", "ui"]
}
